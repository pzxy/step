package main

import (
	"bytes"
	"encoding/json"
	"fmt"
)

func main() {
	b := []byte{123, 34, 114, 101, 115, 117, 108, 116, 34, 58, 123, 34, 109, 115, 103, 34, 58, 34, 34, 44, 34, 114, 101, 115, 117, 108, 116, 34, 58, 123, 34, 48, 48, 48, 48, 48, 48, 52, 108, 110, 54, 34, 58, 91, 123, 34, 99, 111, 100, 101, 34, 58, 34, 99, 111, 109, 109, 97, 110, 100, 95, 115, 121, 110, 99, 34, 44, 34, 100, 101, 102, 97, 117, 108, 116, 86, 97, 108, 117, 101, 34, 58, 34, 34, 44, 34, 99, 97, 110, 84, 114, 105, 103, 103, 101, 114, 34, 58, 116, 114, 117, 101, 44, 34, 116, 121, 112, 101, 34, 58, 34, 114, 97, 119, 34, 44, 34, 101, 120, 101, 99, 117, 116, 97, 98, 108, 101, 34, 58, 116, 114, 117, 101, 44, 34, 109, 111, 100, 101, 34, 58, 34, 119, 114, 34, 44, 34, 100, 101, 102, 97, 117, 108, 116, 82, 101, 99, 111, 109, 109, 101, 110, 100, 34, 58, 102, 97, 108, 115, 101, 44, 34, 110, 97, 109, 101, 34, 58, 34, 230, 149, 176, 230, 141, 174, 228, 184, 138, 228, 188, 160, 230, 140, 135, 228, 187, 164, 34, 44, 34, 105, 100, 34, 58, 50, 51, 49, 44, 34, 97, 116, 116, 114, 34, 58, 48, 44, 34, 101, 120, 116, 67, 111, 110, 116, 101, 110, 116, 34, 58, 34, 34, 44, 34, 101, 100, 105, 116, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 34, 58, 102, 97, 108, 115, 101, 44, 34, 99, 108, 97, 115, 115, 34, 58, 34, 99, 111, 109, 46, 116, 117, 121, 97, 46, 97, 114, 116, 104, 97, 115, 46, 99, 108, 105, 101, 110, 116, 46, 100, 111, 109, 97, 105, 110, 46, 118, 111, 46, 100, 97, 116, 97, 112, 111, 105, 110, 116, 46, 65, 114, 116, 104, 97, 115, 83, 99, 104, 101, 109, 97, 68, 97, 116, 97, 80, 111, 105, 110, 116, 86, 79, 34, 44, 34, 100, 101, 115, 99, 34, 58, 34, 233, 128, 154, 231, 148, 168, 68, 80, 231, 130, 185, 239, 188, 140, 228, 184, 139, 229, 143, 145, 231, 189, 145, 229, 133, 179, 230, 149, 176, 230, 141, 174, 229, 144, 140, 230, 173, 165, 230, 140, 135, 228, 187, 164, 239, 188, 140, 231, 189, 145, 229, 133, 179, 230, 142, 165, 230, 148, 182, 229, 144, 142, 229, 144, 140, 230, 173, 165, 230, 156, 172, 229, 156, 176, 230, 149, 176, 230, 141, 174, 239, 188, 140, 229, 144, 142, 231, 187, 173, 230, 137, 169, 229, 177, 149, 229, 156, 168, 228, 188, 160, 232, 190, 147, 229, 134, 133, 229, 174, 185, 228, 184, 173, 229, 174, 140, 230, 136, 144, 239, 188, 155, 74, 83, 79, 78, 230, 160, 188, 229, 188, 143, 239, 188, 140, 32, 229, 134, 133, 233, 131, 168, 229, 173, 151, 230, 174, 181, 239, 188, 154, 116, 121, 112, 101, 58, 102, 117, 108, 108, 40, 229, 133, 168, 233, 135, 143, 41, 47, 99, 104, 97, 110, 103, 101, 100, 40, 229, 162, 158, 233, 135, 143, 41, 239, 188, 155, 109, 111, 100, 101, 58, 100, 101, 118, 105, 99, 101, 40, 232, 174, 190, 229, 164, 135, 41, 34, 125, 44, 123, 34, 99, 111, 100, 101, 34, 58, 34, 115, 121, 110, 99, 95, 100, 97, 116, 97, 34, 44, 34, 100, 101, 102, 97, 117, 108, 116, 86, 97, 108, 117, 101, 34, 58, 34, 34, 44, 34, 99, 97, 110, 84, 114, 105, 103, 103, 101, 114, 34, 58, 116, 114, 117, 101, 44, 34, 116, 121, 112, 101, 34, 58, 34, 114, 97, 119, 34, 44, 34, 101, 120, 101, 99, 117, 116, 97, 98, 108, 101, 34, 58, 116, 114, 117, 101, 44, 34, 109, 111, 100, 101, 34, 58, 34, 119, 114, 34, 44, 34, 100, 101, 102, 97, 117, 108, 116, 82, 101, 99, 111, 109, 109, 101, 110, 100, 34, 58, 102, 97, 108, 115, 101, 44, 34, 110, 97, 109, 101, 34, 58, 34, 228, 184, 139, 229, 143, 145, 229, 144, 140, 230, 173, 165, 230, 149, 176, 230, 141, 174, 34, 44, 34, 105, 100, 34, 58, 50, 51, 50, 44, 34, 97, 116, 116, 114, 34, 58, 48, 44, 34, 99, 108, 97, 115, 115, 34, 58, 34, 99, 111, 109, 46, 116, 117, 121, 97, 46, 97, 114, 116, 104, 97, 115, 46, 99, 108, 105, 101, 110, 116, 46, 100, 111, 109, 97, 105, 110, 46, 118, 111, 46, 100, 97, 116, 97, 112, 111, 105, 110, 116, 46, 65, 114, 116, 104, 97, 115, 83, 99, 104, 101, 109, 97, 68, 97, 116, 97, 80, 111, 105, 110, 116, 86, 79, 34, 44, 34, 101, 120, 116, 67, 111, 110, 116, 101, 110, 116, 34, 58, 34, 34, 44, 34, 101, 100, 105, 116, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 34, 58, 102, 97, 108, 115, 101, 44, 34, 100, 101, 115, 99, 34, 58, 34, 233, 128, 154, 231, 148, 168, 68, 80, 231, 130, 185, 239, 188, 140, 229, 144, 140, 230, 173, 165, 231, 148, 168, 230, 136, 183, 228, 191, 161, 230, 129, 175, 229, 136, 176, 231, 189, 145, 229, 133, 179, 239, 188, 140, 74, 83, 79, 78, 230, 160, 188, 229, 188, 143, 239, 188, 140, 32, 229, 134, 133, 233, 131, 168, 229, 173, 151, 230, 174, 181, 239, 188, 154, 32, 116, 121, 112, 101, 58, 97, 100, 100, 40, 230, 150, 176, 229, 162, 158, 41, 47, 117, 112, 100, 97, 116, 101, 40, 228, 191, 174, 230, 148, 185, 41, 47, 100, 101, 108, 40, 229, 136, 160, 233, 153, 164, 41, 239, 188, 155, 109, 111, 100, 101, 58, 117, 115, 101, 114, 40, 231, 148, 168, 230, 136, 183, 41, 47, 102, 97, 99, 101, 40, 228, 186, 186, 232, 132, 184, 41, 47, 99, 97, 114, 100, 40, 229, 141, 161, 41, 47, 118, 105, 115, 105, 116, 111, 114, 40, 232, 174, 191, 229, 174, 162, 41, 47, 113, 114, 99, 111, 100, 101, 40, 228, 186, 140, 231, 187, 180, 231, 160, 129, 41, 239, 188, 155, 32, 100, 97, 116, 97, 239, 188, 154, 230, 149, 176, 230, 141, 174, 229, 134, 133, 229, 174, 185, 34, 125, 44, 123, 34, 99, 111, 100, 101, 34, 58, 34, 115, 121, 110, 99, 95, 115, 116, 97, 116, 117, 115, 34, 44, 34, 100, 101, 102, 97, 117, 108, 116, 86, 97, 108, 117, 101, 34, 58, 34, 48, 34, 44, 34, 99, 97, 110, 84, 114, 105, 103, 103, 101, 114, 34, 58, 116, 114, 117, 101, 44, 34, 116, 121, 112, 101, 34, 58, 34, 111, 98, 106, 34, 44, 34, 101, 120, 101, 99, 117, 116, 97, 98, 108, 101, 34, 58, 116, 114, 117, 101, 44, 34, 109, 111, 100, 101, 34, 58, 34, 114, 111, 34, 44, 34, 100, 101, 102, 97, 117, 108, 116, 82, 101, 99, 111, 109, 109, 101, 110, 100, 34, 58, 102, 97, 108, 115, 101, 44, 34, 112, 114, 111, 112, 101, 114, 116, 121, 34, 58, 123, 34, 114, 97, 110, 103, 101, 34, 58, 91, 34, 48, 34, 44, 34, 49, 34, 44, 34, 50, 34, 93, 44, 34, 116, 121, 112, 101, 34, 58, 34, 101, 110, 117, 109, 34, 125, 44, 34, 110, 97, 109, 101, 34, 58, 34, 228, 184, 138, 230, 138, 165, 231, 138, 182, 230, 128, 129, 34, 44, 34, 105, 100, 34, 58, 50, 51, 51, 44, 34, 97, 116, 116, 114, 34, 58, 48, 44, 34, 99, 108, 97, 115, 115, 34, 58, 34, 99, 111, 109, 46, 116, 117, 121, 97, 46, 97, 114, 116, 104, 97, 115, 46, 99, 108, 105, 101, 110, 116, 46, 100, 111, 109, 97, 105, 110, 46, 118, 111, 46, 100, 97, 116, 97, 112, 111, 105, 110, 116, 46, 65, 114, 116, 104, 97, 115, 83, 99, 104, 101, 109, 97, 68, 97, 116, 97, 80, 111, 105, 110, 116, 86, 79, 34, 44, 34, 101, 100, 105, 116, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 34, 58, 102, 97, 108, 115, 101, 44, 34, 101, 120, 116, 67, 111, 110, 116, 101, 110, 116, 34, 58, 34, 34, 44, 34, 100, 101, 115, 99, 34, 58, 34, 48, 58, 231, 166, 187, 231, 186, 191, 239, 188, 155, 49, 58, 229, 156, 168, 231, 186, 191, 239, 188, 155, 50, 58, 229, 188, 130, 229, 184, 184, 34, 125, 93, 125, 44, 34, 99, 111, 100, 101, 34, 58, 49, 48, 48, 44, 34, 116, 34, 58, 49, 54, 51, 57, 54, 52, 54, 55, 52, 50, 44, 34, 115, 117, 99, 99, 101, 115, 115, 34, 58, 116, 114, 117, 101, 125, 44, 34, 116, 34, 58, 49, 54, 51, 57, 54, 52, 54, 55, 52, 50, 44, 34, 101, 34, 58, 102, 97, 108, 115, 101, 44, 34, 115, 117, 99, 99, 101, 115, 115, 34, 58, 116, 114, 117, 101, 125, 10}
	decoder := json.NewDecoder(bytes.NewReader(b))
	decoder.UseNumber()
	var resp AtopBaseResp
	err := decoder.Decode(&resp)
	if err != nil {
		fmt.Println(err)
	}
	m,ok := resp.Result.Result.(map[string]interface{})
	if !ok {
		fmt.Println("no")
	}
	fmt.Println(m["0000004ln6"])
}

type ApiCommonResp struct {
	Code    uint32      `json:"code"`
	Success bool        `json:"success"`
	Msg     string      `json:"msg"`
	T       int64       `json:"t"`
	Result  interface{} `json:"result"`
}
type Base struct {
	T         int64         `json:"t"`
	E         bool          `json:"e"`
	Success   bool          `json:"success"`
	ErrorCode string        `json:"errorCode"`
	ErrorMsg  string        `json:"errorMsg"`
}

type AtopBaseResp struct {
	Base
	Result    ApiCommonResp `json:"result"`
}
